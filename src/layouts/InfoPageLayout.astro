---
import Header from '../components/DelcHeader.astro';
import Footer from '../components/DelcFooter.astro';

import '../styles/delcGlobal.css';
import '../styles/delcInfoGlobal.css';

import "@fontsource-variable/noto-sans-jp"
import "@fontsource-variable/oswald"

import {
  Breadcrumb,
  BreadcrumbItem,
  BreadcrumbLink,
  BreadcrumbList,
  BreadcrumbPage,
  BreadcrumbSeparator,
} from "@/components/ui/breadcrumb"

import localBrandingImage from '../images/branding.svg';
import { ViewTransitions,slide } from "astro:transitions";

const { 
    companyName,
    pageTitle,
    pageTitleRuby,
    tabTitle,
    
    menus,
    destinationURLs
} = Astro.props;
---

<html lang="ja">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <title>{tabTitle}</title>
    <ViewTransitions />
  </head>
  <body class="font-body">
    <Header />

    <!--トップのロゴ-->
    <div class ="header-block">
      <a href="/toppage/",div class = "company-header">
      <div class="company-branding"/>
      <div class="company-logo"/>
    </a>
    
    <div class = "page-title-block">
        <div class = "page-title-ruby">{pageTitleRuby}</div>
        <div class = "page-title">{pageTitle}</div>
        <!--パンくずリスト-->
        <div class = "breadcrumb">
          <Breadcrumb>
            <BreadcrumbList>
              <BreadcrumbItem>
                <BreadcrumbLink href="/toppage">HOME</BreadcrumbLink>
              </BreadcrumbItem>
              {destinationURLs.map(data => (
              <BreadcrumbSeparator />
                <BreadcrumbItem>
                <BreadcrumbLink href={"/"+data.url}>{data.ruby}</BreadcrumbLink>
              </BreadcrumbItem>
                ))}
            </BreadcrumbList>
          </Breadcrumb>
        </div>
    </div>
    </div>

    <div class = "overall-style">
    <div class="side-menu-block">
        <div class="side-menu" style="text-align: reft;">
          <p1>{pageTitle}</p1>
          {menus && menus.length > 0 ? (menus.map((menu: { url: string; text: string; }) => (
            <a href={"/" +menu.url}>{'・'+menu.text}</a>
          ))):(<li>No items available</li>)}
        </div>
    </div>
    

    <div class="main-block">      
    <slot />
    </div>
    </div>

    <Footer />
    <script>
      import "../scripts/menu.js";
    </script>
  </body>
</html>